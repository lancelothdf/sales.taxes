
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #' Author: Lancelot Henry de Frahan and John Bonney (Wesley Janson)
> #'
> # Run similar regressions as "main_semesterly_regressions_commonsupport_c1.R", but with county X module data 
> 
> library(data.table)
> library(futile.logger)
> library(lfe)
Loading required package: Matrix
> library(multcomp)
Loading required package: mvtnorm
Loading required package: survival
Loading required package: TH.data
Loading required package: MASS

Attaching package: ‘TH.data’

The following object is masked from ‘package:MASS’:

    geyser

> 
> setwd("/project2/igaarder")
> 
> 
> ## input filepaths -----------------------------------------------
> #' This data set contains quarterly Laspeyres indices and sales from 2006 to
> #' 2016. It also contains sales tax rates from the same time period.
> all_goods_pi_path <- "Data/Nielsen/price_quantity_indices_allitems_2006-2016_notaxinfo.csv"
> #' This data set contains an old price index that Lance constructed, from
> old_pi_path <- "Data/Nielsen/Quarterly_old_pi.csv"
> #' This data is the same as all_goods_pi_path, except it has 2015-2016 data as well.
> data.full.path <- "Data/Nielsen/semester_nielsen_data_county.csv"
> 
> zillow_path <- "Data/covariates/zillow_long_by_county_clean.csv"
> zillow_state_path <- "Data/covariates/zillow_long_by_state_clean.csv"
> unemp.path <- "Data/covariates/county_monthly_unemp_clean.csv"
> wage.path <- "Data/covariates/qcew_quarterly_clean.csv"
> 
> 
> 
> ## output filepaths ----------------------------------------------
> output.results.file <- "Data/LRdiff_semesterly_COUNTY.csv"
> 
> 
> ##### 
> all_pi <- fread(data.full.path)
> 
> 
> #### Prep the unemployment, house price data and quarterly wage data
> ### Start with house prices 
> # First build a frame to make sure we can assign every county a home price
> all_counties <- unique(all_pi[, .(fips_state, fips_county)])
> county_skeleton <- data.table(NULL)
> for (X in 2006:2016) {
+   for (Y in 1:12) {
+     all_counties[, year := X]
+     all_counties[, month := Y]
+     county_skeleton <- rbind(county_skeleton, all_counties)
+   }
+ }
> 
> ## prep house price data
> zillow_dt <- fread(zillow_path)
> zillow_dt <- zillow_dt[between(year, 2006, 2016)]
> zillow_dt <- zillow_dt[, .(fips_state, fips_county, median_home_price, year, month)]
> zillow_dt <- merge(county_skeleton, zillow_dt, all.x = T,
+                    by = c("fips_state", "fips_county", "year", "month"))
> 
> ## prep state-level house prices (for when county-level is missing)
> zillow_state_dt <- fread(zillow_state_path)
> zillow_state_dt <- zillow_state_dt[between(year, 2006, 2016)]
> zillow_state_dt <- zillow_state_dt[, .(fips_state, median_home_price, year, month)]
> setnames(zillow_state_dt, "median_home_price", "state_median_home_price")
> zillow_state_dt$month <- as.integer(round(zillow_state_dt$month))
> 
> zillow_dt <- merge(zillow_dt, zillow_state_dt, all.x = T,
+                    by = c("fips_state", "year", "month"))
> zillow_dt[is.na(median_home_price), median_home_price := state_median_home_price]
> zillow_dt[, state_median_home_price := NULL]
> 
> 
> ## collapse to semesters
> zillow_dt <- zillow_dt[, semester := ceiling((month/12)*2)]
> zillow_dt <- zillow_dt[, list(ln_home_price = log(mean(median_home_price))),
+                        by = .(year, semester, fips_state, fips_county)]
> ##
> 
> 
> ### Unemployment data
> unemp.data <- fread(unemp.path)
> unemp.data <- unemp.data[, c("fips_state", "fips_county", "year", "month", "rate")]
> unemp.data <- unemp.data[, semester := ceiling((month/12)*2)]
> unemp.data <- unemp.data[, list(unemp = mean(rate)), by = .(year, semester, fips_state, fips_county)]
> unemp.data <- unemp.data[year >= 2006 & year <= 2016,]
> unemp.data <- unemp.data[, ln_unemp := log(unemp)]
> 
> ##
> zillow_dt <- merge(zillow_dt, unemp.data, by = c("fips_state", "fips_county", "year", "semester"), all.x = T)
> rm(unemp.data)
> 
> 
> ### Balance the sample
> zillow_dt <- zillow_dt[!is.na(ln_unemp) & !is.na(ln_home_price)]
> 
> 
> keep_counties <- zillow_dt[, list(n = .N),
+                            by = .(fips_state, fips_county)]
> keep_counties <- keep_counties[n == (2016 - 2005) * 2]
> 
> setkey(zillow_dt, fips_state, fips_county)
> setkey(keep_counties, fips_state, fips_county)
> 
> zillow_dt <- zillow_dt[keep_counties]
> setkey(zillow_dt, fips_state, fips_county, year, semester)
> 
> 
> ### Difference the econ data + leads and lags
> zillow_dt <- zillow_dt[order(fips_state, fips_county, year, semester),]
> 
> zillow_dt[, D.ln_home_price := ln_home_price - shift(ln_home_price, n=1, type="lag"),
+           by = .(fips_state, fips_county)]
> 
> zillow_dt[, D.ln_unemp := ln_unemp - shift(ln_unemp, n=1, type="lag"),
+           by = .(fips_state, fips_county)]
> 
> ## generate lags
> for (lag.val in 1:4) {
+   lag.X <- paste0("L", lag.val, ".D.ln_home_price")
+   zillow_dt[, (lag.X) := shift(D.ln_home_price, n=lag.val, type="lag"),
+             by = .(fips_state, fips_county)]
+   
+   lag.X <- paste0("L", lag.val, ".D.ln_unemp")
+   zillow_dt[, (lag.X) := shift(D.ln_unemp, n=lag.val, type="lag"),
+             by = .(fips_state, fips_county)]
+ }
> 
> 
> # Create lagged value (initial)
> all_pi[, L.ln_sales_tax := ln_sales_tax - D.ln_sales_tax]
> 
> # need to demean lag price to compare appropiately
> all_pi[, module_by_time := .GRP, by = .(product_module_code, year)]
> all_pi[, L.ln_cpricei2 := ln_cpricei2 - D.ln_cpricei2]
> all_pi[, dm.L.ln_cpricei2 := L.ln_cpricei2 - mean(L.ln_cpricei2, na.rm = T), by = module_by_time]
> all_pi[, dm.ln_cpricei2 := ln_cpricei2 - mean(ln_cpricei2, na.rm = T), by = module_by_time]
> all_pi[, dm.ln_quantity3 := ln_quantity3 - mean(ln_quantity3, na.rm = T), by = module_by_time]
> 
> # Defining common support
> control <- all_pi[D.ln_sales_tax == 0,]
> treated <- all_pi[D.ln_sales_tax != 0,]
> 
> # Price 
> pct1.control <- quantile(control$dm.L.ln_cpricei2, probs = 0.01, na.rm = T, weight=control$base.sales)
> pct1.treated <- quantile(treated$dm.L.ln_cpricei2, probs = 0.01, na.rm = T, weight=treated$base.sales)
> 
> pct99.control <- quantile(control$dm.L.ln_cpricei2, probs = 0.99, na.rm = T, weight=control$base.sales)
> pct99treated <- quantile(treated$dm.L.ln_cpricei2, probs = 0.99, na.rm = T, weight=treated$base.sales)
> 
> all_pi[, cs_price := ifelse(dm.L.ln_cpricei2 > max(pct1.treated, pct1.control) & 
+                               dm.L.ln_cpricei2 < min(pct99treated, pct99.control), 1, 0)]
> # Make sure missings are 0s
> all_pi[, cs_price := ifelse(is.na(dm.L.ln_cpricei2), 0, cs_price)]
> 
> ## Keep within the common support
> all_pi <- all_pi[cs_price == 1,]
> 
> ## cut the tails (keep between 1st and 99th percentile)
> pct1 <- quantile(all_pi$dm.ln_cpricei2, probs = 0.01, na.rm = T, weight=base.sales)
> pct99 <- quantile(all_pi$dm.ln_cpricei2, probs = 0.99, na.rm = T, weight=base.sales)
> all_pi <- all_pi[(dm.ln_cpricei2 > pct1 & dm.ln_cpricei2 < pct99),]
> 
> ### Merge econ data to price and quantity data then run estimations
> all_pi_econ <- merge(all_pi, zillow_dt, by = c("fips_state", "fips_county", "year", "semester"))
> 
> ## Setting up loop to estimate
> 
> formula_lags <- paste0("L", 1:4, ".D.ln_sales_tax", collapse = "+")
> formula_leads <- paste0("F", 1:4, ".D.ln_sales_tax", collapse = "+")
> formula_RHS <- paste0("D.ln_sales_tax + ", formula_lags, "+", formula_leads)
> 
> 
> outcomes <- c("D.ln_cpricei", "D.ln_cpricei2", "D.ln_quantity", "D.ln_quantity2", "D.ln_quantity3")
> FE_opts <- c("module_by_time", "region_by_module_by_time", "division_by_module_by_time")
> 
> ## for linear hypothesis tests
> lead.vars <- paste(paste0("F", 4:1, ".D.ln_sales_tax"), collapse = " + ")
> lag.vars <- paste(paste0("L", 4:1, ".D.ln_sales_tax"), collapse = " + ")
> lead.lp.restr <- paste(lead.vars, "= 0")
> lag.lp.restr <- paste(lag.vars, "+ D.ln_sales_tax = 0")
> total.lp.restr <- paste(lag.vars, "+", lead.vars, "+ D.ln_sales_tax = 0")
> 
> 
> ### First: run regression and estimate leads and lags directly (without imposing smoothness)
> ## No Econ controls (but we run the placebos)
> LRdiff_res <- data.table(NULL)
> 
> for (Y in c(outcomes)) {
+   for (FE in FE_opts) {
+     for(i in 0:4) {
+       
+       if (i > 0) {
+         # Create list of economic controls  
+         lag.home <- paste(paste0("L", i:1, ".D.ln_home_price"), collapse = " + ")
+         lag.unemp <- paste(paste0("L", i:1, ".D.ln_unemp"), collapse = " + ")
+         lag.econ <- paste(lag.home, lag.unemp, sep = " + ")
+         
+         
+         formula1 <- as.formula(paste0(
+           Y, "~", formula_RHS, " + ", lag.econ, "| ", FE, " | 0 | module_by_state"
+         ))
+         flog.info("Estimating with %s as outcome with %s FE.", Y, FE)
+         res1 <- felm(formula = formula1, data = all_pi_econ,
+                      weights = all_pi_econ$base.sales)
+         flog.info("Finished estimating with %s as outcome with %s FE.", Y, FE)
+         
+       } else {
+         
+         formula1 <- as.formula(paste0(
+           Y, "~", formula_RHS, "| ", FE, " | 0 | module_by_state"
+         ))
+         flog.info("Estimating with %s as outcome with %s FE.", Y, FE)
+         res1 <- felm(formula = formula1, data = all_pi,
+                      weights = all_pi$base.sales)
+         flog.info("Finished estimating with %s as outcome with %s FE.", Y, FE)
+         
+       }
+       
+       ## attach results
+       flog.info("Writing results...")
+       res1.dt <- data.table(coef(summary(res1)), keep.rownames=T)
+       res1.dt[, outcome := Y]
+       res1.dt[, controls := FE]
+       res1.dt[, econ := i]
+       res1.dt[, Rsq := summary(res1)$r.squared]
+       res1.dt[, adj.Rsq := summary(res1)$adj.r.squared]
+       # Add summary values
+       if (i > 0) {
+         res1.dt[, N_obs := nrow(all_pi_econ)]
+         res1.dt[, N_modules := length(unique(all_pi_econ$product_module_code))]
+         res1.dt[, N_stores :=  length(unique(all_pi_econ$store_code_uc))]
+         res1.dt[, N_counties := uniqueN(all_pi_econ, by = c("fips_state", "fips_county"))]
+         res1.dt[, N_years := uniqueN(all_pi_econ, by = c("year"))]
+         res1.dt[, N_county_modules := uniqueN(all_pi_econ, by = c("fips_state", "fips_county",
+                                                                   "product_module_code"))]
+         
+       } else {
+         
+         res1.dt[, N_obs := nrow(all_pi)]
+         res1.dt[, N_modules := length(unique(all_pi$product_module_code))]
+         res1.dt[, N_stores :=  length(unique(all_pi$store_code_uc))]
+         res1.dt[, N_counties := uniqueN(all_pi, by = c("fips_state", "fips_county"))]
+         res1.dt[, N_years := uniqueN(all_pi, by = c("year"))]
+         res1.dt[, N_county_modules := uniqueN(all_pi, by = c("fips_state", "fips_county",
+                                                              "product_module_code"))]
+         
+       }
+       
+       
+       
+       LRdiff_res <- rbind(LRdiff_res, res1.dt)
+       fwrite(LRdiff_res, output.results.file)
+       
+       ## sum leads
+       flog.info("Summing leads...")
+       lead.test <- glht(res1, linfct = lead.lp.restr)
+       lead.test.est <- coef(summary(lead.test))[[1]]
+       lead.test.se <- sqrt(vcov(summary(lead.test)))[[1]]
+       lead.test.pval <- 2*(1 - pnorm(abs(lead.test.est/lead.test.se)))
+       
+       ## sum lags
+       flog.info("Summing lags...")
+       lag.test <- glht(res1, linfct = lag.lp.restr)
+       lag.test.est <- coef(summary(lag.test))[[1]]
+       lag.test.se <- sqrt(vcov(summary(lag.test)))[[1]]
+       lag.test.pval <- 2*(1 - pnorm(abs(lag.test.est/lag.test.se)))
+       
+       ## sum all
+       flog.info("Summing all...")
+       total.test <- glht(res1, linfct = total.lp.restr)
+       total.test.est <- coef(summary(total.test))[[1]]
+       total.test.se <- sqrt(vcov(summary(total.test)))[[1]]
+       total.test.pval <- 2*(1 - pnorm(abs(total.test.est/total.test.se)))
+       
+       ## linear hypothesis results
+       lp.dt <- data.table(
+         rn = c("Pre.D.ln_sales_tax", "Post.D.ln_sales_tax", "All.D.ln_sales_tax"),
+         Estimate = c(lead.test.est, lag.test.est, total.test.est),
+         `Cluster s.e.` = c(lead.test.se, lag.test.se, total.test.se),
+         `Pr(>|t|)` = c(lead.test.pval, lag.test.pval, total.test.pval),
+         outcome = Y,
+         controls = FE,
+         econ = i,
+         Rsq = summary(res1)$r.squared,
+         adj.Rsq = summary(res1)$adj.r.squared)
+       LRdiff_res <- rbind(LRdiff_res, lp.dt, fill = T)
+       fwrite(LRdiff_res, output.results.file)
+       
+       
+       ##### Add the cumulative effect at each lead/lag (relative to -2)
+       cumul.lead1.est <- 0
+       cumul.lead1.se <- NA
+       cumul.lead1.pval <- NA
+       
+       #cumul.lead3.est is just equal to minus the change between -3 and -2
+       cumul.lead2.est <- - coef(summary(res1))[ "F1.D.ln_sales_tax", "Estimate"]
+       cumul.lead2.se <- coef(summary(res1))[ "F1.D.ln_sales_tax", "Cluster s.e."]
+       cumul.lead2.pval <- coef(summary(res1))[ "F1.D.ln_sales_tax", "Pr(>|t|)"]
+       
+       ##LEADS
+       for(j in 3:5) {
+         
+         ## Create a name for estimate, se and pval of each lead
+         cumul.test.est.name <- paste("cumul.lead", j, ".est", sep = "")
+         cumul.test.se.name <- paste("cumul.lead", j, ".se", sep = "")
+         cumul.test.pval.name <- paste("cumul.lead", j, ".pval", sep = "")
+         
+         ## Create the formula to compute cumulative estimate at each lead/lag
+         cumul.test.form <- paste0("-", paste(paste0("F", (j-1):1, ".D.ln_sales_tax"), collapse = " - "))
+         cumul.test.form <- paste(cumul.test.form, " = 0")
+         
+         ## Compute estimate and store in variables names
+         cumul.test <- glht(res1, linfct = cumul.test.form)
+         
+         assign(cumul.test.est.name, coef(summary(cumul.test))[[1]])
+         assign(cumul.test.se.name, sqrt(vcov(summary(cumul.test)))[[1]])
+         assign(cumul.test.pval.name, 2*(1 - pnorm(abs(coef(summary(cumul.test))[[1]]/sqrt(vcov(summary(cumul.test)))[[1]]))))
+       }
+       
+       
+       ##LAGS
+       ## On Impact --> Effect = coefficient on D.ln_sales_tax + F1.D.ln_sales_tax
+       cumul.lag0.est <- coef(summary(res1))[ "D.ln_sales_tax", "Estimate"]
+       cumul.lag0.se <- coef(summary(res1))[ "D.ln_sales_tax", "Cluster s.e."]
+       cumul.lag0.pval <- coef(summary(res1))[ "D.ln_sales_tax", "Pr(>|t|)"]
+       
+       
+       for(j in 1:4) {
+         
+         ## Create a name for estimate, se and pval of each lead
+         cumul.test.est.name <- paste("cumul.lag", j, ".est", sep = "")
+         cumul.test.se.name <- paste("cumul.lag", j, ".se", sep = "")
+         cumul.test.pval.name <- paste("cumul.lag", j, ".pval", sep = "")
+         
+         ## Create the formula to compute cumulative estimate at each lead/lag
+         cumul.test.form <- paste("D.ln_sales_tax + ", paste(paste0("L", 1:j, ".D.ln_sales_tax"), collapse = " + "), sep = "")
+         cumul.test.form <- paste(cumul.test.form, " = 0")
+         
+         ## Compute estimate and store in variables names
+         cumul.test <- glht(res1, linfct = cumul.test.form)
+         
+         assign(cumul.test.est.name, coef(summary(cumul.test))[[1]])
+         assign(cumul.test.se.name, sqrt(vcov(summary(cumul.test)))[[1]])
+         assign(cumul.test.pval.name, 2*(1 - pnorm(abs(coef(summary(cumul.test))[[1]]/sqrt(vcov(summary(cumul.test)))[[1]]))))
+       }
+       
+       
+       ## linear hypothesis results
+       lp.dt <- data.table(
+         rn = c("cumul.lead5.D.ln_sales_tax", "cumul.lead4.D.ln_sales_tax", "cumul.lead3.D.ln_sales_tax", "cumul.lead2.D.ln_sales_tax", "cumul.lead1.D.ln_sales_tax", "cumul.lag0.D.ln_sales_tax", "cumul.lag1.D.ln_sales_tax", "cumul.lag2.D.ln_sales_tax", "cumul.lag3.D.ln_sales_tax", "cumul.lag4.D.ln_sales_tax"),
+         Estimate = c(cumul.lead5.est, cumul.lead4.est, cumul.lead3.est, cumul.lead2.est, cumul.lead1.est, cumul.lag0.est, cumul.lag1.est, cumul.lag2.est, cumul.lag3.est, cumul.lag4.est),
+         `Cluster s.e.` = c(cumul.lead5.se, cumul.lead4.se, cumul.lead3.se, cumul.lead2.se, cumul.lead1.se, cumul.lag0.se, cumul.lag1.se, cumul.lag2.se, cumul.lag3.se, cumul.lag4.se),
+         `Pr(>|t|)` = c(cumul.lead5.pval, cumul.lead4.pval, cumul.lead3.pval, cumul.lead2.pval, cumul.lead1.pval, cumul.lag0.pval, cumul.lag1.pval, cumul.lag2.pval, cumul.lag3.pval, cumul.lag4.pval),
+         outcome = Y,
+         controls = FE,
+         econ = i,
+         Rsq = summary(res1)$r.squared,
+         adj.Rsq = summary(res1)$adj.r.squared)
+       LRdiff_res <- rbind(LRdiff_res, lp.dt, fill = T)
+       fwrite(LRdiff_res, output.results.file)
+       
+     }
+   }
+ }
INFO [2022-02-10 14:10:28] Estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:10:48] Finished estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:10:48] Writing results...
INFO [2022-02-10 14:10:52] Summing leads...
INFO [2022-02-10 14:10:52] Summing lags...
INFO [2022-02-10 14:10:52] Summing all...
INFO [2022-02-10 14:10:58] Estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:11:18] Finished estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:11:18] Writing results...
INFO [2022-02-10 14:11:20] Summing leads...
INFO [2022-02-10 14:11:20] Summing lags...
INFO [2022-02-10 14:11:20] Summing all...
INFO [2022-02-10 14:11:26] Estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:11:46] Finished estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:11:46] Writing results...
INFO [2022-02-10 14:11:48] Summing leads...
INFO [2022-02-10 14:11:48] Summing lags...
INFO [2022-02-10 14:11:48] Summing all...
INFO [2022-02-10 14:11:54] Estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:12:12] Finished estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:12:12] Writing results...
INFO [2022-02-10 14:12:15] Summing leads...
INFO [2022-02-10 14:12:15] Summing lags...
INFO [2022-02-10 14:12:15] Summing all...
INFO [2022-02-10 14:12:21] Estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:12:40] Finished estimating with D.ln_cpricei as outcome with module_by_time FE.
INFO [2022-02-10 14:12:40] Writing results...
INFO [2022-02-10 14:12:42] Summing leads...
INFO [2022-02-10 14:12:42] Summing lags...
INFO [2022-02-10 14:12:42] Summing all...
INFO [2022-02-10 14:12:47] Estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:13:05] Finished estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:13:05] Writing results...
INFO [2022-02-10 14:13:08] Summing leads...
INFO [2022-02-10 14:13:08] Summing lags...
INFO [2022-02-10 14:13:08] Summing all...
INFO [2022-02-10 14:13:13] Estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:13:32] Finished estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:13:32] Writing results...
INFO [2022-02-10 14:13:35] Summing leads...
INFO [2022-02-10 14:13:35] Summing lags...
INFO [2022-02-10 14:13:35] Summing all...
INFO [2022-02-10 14:13:40] Estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:13:59] Finished estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:13:59] Writing results...
INFO [2022-02-10 14:14:01] Summing leads...
INFO [2022-02-10 14:14:01] Summing lags...
INFO [2022-02-10 14:14:01] Summing all...
INFO [2022-02-10 14:14:07] Estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:14:26] Finished estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:14:26] Writing results...
INFO [2022-02-10 14:14:28] Summing leads...
INFO [2022-02-10 14:14:28] Summing lags...
INFO [2022-02-10 14:14:28] Summing all...
INFO [2022-02-10 14:14:33] Estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:14:52] Finished estimating with D.ln_cpricei as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:14:52] Writing results...
INFO [2022-02-10 14:14:55] Summing leads...
INFO [2022-02-10 14:14:55] Summing lags...
INFO [2022-02-10 14:14:55] Summing all...
INFO [2022-02-10 14:15:00] Estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:15:18] Finished estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:15:18] Writing results...
INFO [2022-02-10 14:15:21] Summing leads...
INFO [2022-02-10 14:15:21] Summing lags...
INFO [2022-02-10 14:15:21] Summing all...
INFO [2022-02-10 14:15:26] Estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:15:44] Finished estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:15:44] Writing results...
INFO [2022-02-10 14:15:47] Summing leads...
INFO [2022-02-10 14:15:47] Summing lags...
INFO [2022-02-10 14:15:47] Summing all...
INFO [2022-02-10 14:15:52] Estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:16:12] Finished estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:16:12] Writing results...
INFO [2022-02-10 14:16:14] Summing leads...
INFO [2022-02-10 14:16:14] Summing lags...
INFO [2022-02-10 14:16:14] Summing all...
INFO [2022-02-10 14:16:18] Estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:16:38] Finished estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:16:38] Writing results...
INFO [2022-02-10 14:16:40] Summing leads...
INFO [2022-02-10 14:16:40] Summing lags...
INFO [2022-02-10 14:16:40] Summing all...
INFO [2022-02-10 14:16:46] Estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:17:05] Finished estimating with D.ln_cpricei as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:17:05] Writing results...
INFO [2022-02-10 14:17:08] Summing leads...
INFO [2022-02-10 14:17:08] Summing lags...
INFO [2022-02-10 14:17:08] Summing all...
INFO [2022-02-10 14:17:12] Estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:17:30] Finished estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:17:30] Writing results...
INFO [2022-02-10 14:17:33] Summing leads...
INFO [2022-02-10 14:17:33] Summing lags...
INFO [2022-02-10 14:17:33] Summing all...
INFO [2022-02-10 14:17:37] Estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:17:56] Finished estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:17:56] Writing results...
INFO [2022-02-10 14:17:58] Summing leads...
INFO [2022-02-10 14:17:58] Summing lags...
INFO [2022-02-10 14:17:58] Summing all...
INFO [2022-02-10 14:18:03] Estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:18:22] Finished estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:18:22] Writing results...
INFO [2022-02-10 14:18:24] Summing leads...
INFO [2022-02-10 14:18:24] Summing lags...
INFO [2022-02-10 14:18:24] Summing all...
INFO [2022-02-10 14:18:29] Estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:18:48] Finished estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:18:48] Writing results...
INFO [2022-02-10 14:18:51] Summing leads...
INFO [2022-02-10 14:18:51] Summing lags...
INFO [2022-02-10 14:18:51] Summing all...
INFO [2022-02-10 14:18:56] Estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:19:16] Finished estimating with D.ln_cpricei2 as outcome with module_by_time FE.
INFO [2022-02-10 14:19:16] Writing results...
INFO [2022-02-10 14:19:18] Summing leads...
INFO [2022-02-10 14:19:18] Summing lags...
INFO [2022-02-10 14:19:18] Summing all...
INFO [2022-02-10 14:19:23] Estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:19:41] Finished estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:19:41] Writing results...
INFO [2022-02-10 14:19:44] Summing leads...
INFO [2022-02-10 14:19:44] Summing lags...
INFO [2022-02-10 14:19:44] Summing all...
INFO [2022-02-10 14:19:49] Estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:20:07] Finished estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:20:07] Writing results...
INFO [2022-02-10 14:20:10] Summing leads...
INFO [2022-02-10 14:20:10] Summing lags...
INFO [2022-02-10 14:20:10] Summing all...
INFO [2022-02-10 14:20:15] Estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:20:33] Finished estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:20:33] Writing results...
INFO [2022-02-10 14:20:36] Summing leads...
INFO [2022-02-10 14:20:36] Summing lags...
INFO [2022-02-10 14:20:36] Summing all...
INFO [2022-02-10 14:20:40] Estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:20:59] Finished estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:20:59] Writing results...
INFO [2022-02-10 14:21:02] Summing leads...
INFO [2022-02-10 14:21:02] Summing lags...
INFO [2022-02-10 14:21:02] Summing all...
INFO [2022-02-10 14:21:07] Estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:21:27] Finished estimating with D.ln_cpricei2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:21:27] Writing results...
INFO [2022-02-10 14:21:30] Summing leads...
INFO [2022-02-10 14:21:30] Summing lags...
INFO [2022-02-10 14:21:30] Summing all...
INFO [2022-02-10 14:21:35] Estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:21:54] Finished estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:21:54] Writing results...
INFO [2022-02-10 14:21:56] Summing leads...
INFO [2022-02-10 14:21:56] Summing lags...
INFO [2022-02-10 14:21:56] Summing all...
INFO [2022-02-10 14:22:01] Estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:22:20] Finished estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:22:20] Writing results...
INFO [2022-02-10 14:22:22] Summing leads...
INFO [2022-02-10 14:22:22] Summing lags...
INFO [2022-02-10 14:22:22] Summing all...
INFO [2022-02-10 14:22:27] Estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:22:46] Finished estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:22:46] Writing results...
INFO [2022-02-10 14:22:48] Summing leads...
INFO [2022-02-10 14:22:48] Summing lags...
INFO [2022-02-10 14:22:48] Summing all...
INFO [2022-02-10 14:22:54] Estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:23:14] Finished estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:23:14] Writing results...
INFO [2022-02-10 14:23:16] Summing leads...
INFO [2022-02-10 14:23:16] Summing lags...
INFO [2022-02-10 14:23:16] Summing all...
INFO [2022-02-10 14:23:21] Estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:23:42] Finished estimating with D.ln_cpricei2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:23:42] Writing results...
INFO [2022-02-10 14:23:44] Summing leads...
INFO [2022-02-10 14:23:44] Summing lags...
INFO [2022-02-10 14:23:44] Summing all...
INFO [2022-02-10 14:23:50] Estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:24:08] Finished estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:24:08] Writing results...
INFO [2022-02-10 14:24:10] Summing leads...
INFO [2022-02-10 14:24:10] Summing lags...
INFO [2022-02-10 14:24:10] Summing all...
INFO [2022-02-10 14:24:15] Estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:24:34] Finished estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:24:34] Writing results...
INFO [2022-02-10 14:24:36] Summing leads...
INFO [2022-02-10 14:24:36] Summing lags...
INFO [2022-02-10 14:24:36] Summing all...
INFO [2022-02-10 14:24:42] Estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:25:00] Finished estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:25:00] Writing results...
INFO [2022-02-10 14:25:02] Summing leads...
INFO [2022-02-10 14:25:02] Summing lags...
INFO [2022-02-10 14:25:02] Summing all...
INFO [2022-02-10 14:25:07] Estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:25:26] Finished estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:25:26] Writing results...
INFO [2022-02-10 14:25:28] Summing leads...
INFO [2022-02-10 14:25:28] Summing lags...
INFO [2022-02-10 14:25:28] Summing all...
INFO [2022-02-10 14:25:33] Estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:25:54] Finished estimating with D.ln_quantity as outcome with module_by_time FE.
INFO [2022-02-10 14:25:54] Writing results...
INFO [2022-02-10 14:25:56] Summing leads...
INFO [2022-02-10 14:25:56] Summing lags...
INFO [2022-02-10 14:25:56] Summing all...
INFO [2022-02-10 14:26:02] Estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:26:19] Finished estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:26:19] Writing results...
INFO [2022-02-10 14:26:21] Summing leads...
INFO [2022-02-10 14:26:21] Summing lags...
INFO [2022-02-10 14:26:21] Summing all...
INFO [2022-02-10 14:26:27] Estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:26:45] Finished estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:26:45] Writing results...
INFO [2022-02-10 14:26:47] Summing leads...
INFO [2022-02-10 14:26:47] Summing lags...
INFO [2022-02-10 14:26:47] Summing all...
INFO [2022-02-10 14:26:53] Estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:27:11] Finished estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:27:11] Writing results...
INFO [2022-02-10 14:27:13] Summing leads...
INFO [2022-02-10 14:27:13] Summing lags...
INFO [2022-02-10 14:27:13] Summing all...
INFO [2022-02-10 14:27:19] Estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:27:37] Finished estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:27:37] Writing results...
INFO [2022-02-10 14:27:39] Summing leads...
INFO [2022-02-10 14:27:39] Summing lags...
INFO [2022-02-10 14:27:39] Summing all...
INFO [2022-02-10 14:27:44] Estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:28:04] Finished estimating with D.ln_quantity as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:28:04] Writing results...
INFO [2022-02-10 14:28:06] Summing leads...
INFO [2022-02-10 14:28:06] Summing lags...
INFO [2022-02-10 14:28:06] Summing all...
INFO [2022-02-10 14:28:11] Estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:28:29] Finished estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:28:29] Writing results...
INFO [2022-02-10 14:28:32] Summing leads...
INFO [2022-02-10 14:28:32] Summing lags...
INFO [2022-02-10 14:28:32] Summing all...
INFO [2022-02-10 14:28:37] Estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:28:56] Finished estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:28:56] Writing results...
INFO [2022-02-10 14:28:58] Summing leads...
INFO [2022-02-10 14:28:58] Summing lags...
INFO [2022-02-10 14:28:58] Summing all...
INFO [2022-02-10 14:29:03] Estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:29:21] Finished estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:29:21] Writing results...
INFO [2022-02-10 14:29:23] Summing leads...
INFO [2022-02-10 14:29:23] Summing lags...
INFO [2022-02-10 14:29:23] Summing all...
INFO [2022-02-10 14:29:28] Estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:29:47] Finished estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:29:47] Writing results...
INFO [2022-02-10 14:29:50] Summing leads...
INFO [2022-02-10 14:29:50] Summing lags...
INFO [2022-02-10 14:29:50] Summing all...
INFO [2022-02-10 14:29:55] Estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:30:15] Finished estimating with D.ln_quantity as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:30:15] Writing results...
INFO [2022-02-10 14:30:17] Summing leads...
INFO [2022-02-10 14:30:17] Summing lags...
INFO [2022-02-10 14:30:17] Summing all...
INFO [2022-02-10 14:30:21] Estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:30:39] Finished estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:30:39] Writing results...
INFO [2022-02-10 14:30:41] Summing leads...
INFO [2022-02-10 14:30:41] Summing lags...
INFO [2022-02-10 14:30:41] Summing all...
INFO [2022-02-10 14:30:47] Estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:31:05] Finished estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:31:05] Writing results...
INFO [2022-02-10 14:31:07] Summing leads...
INFO [2022-02-10 14:31:07] Summing lags...
INFO [2022-02-10 14:31:07] Summing all...
INFO [2022-02-10 14:31:12] Estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:31:30] Finished estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:31:30] Writing results...
INFO [2022-02-10 14:31:33] Summing leads...
INFO [2022-02-10 14:31:33] Summing lags...
INFO [2022-02-10 14:31:33] Summing all...
INFO [2022-02-10 14:31:38] Estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:31:57] Finished estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:31:57] Writing results...
INFO [2022-02-10 14:31:59] Summing leads...
INFO [2022-02-10 14:31:59] Summing lags...
INFO [2022-02-10 14:31:59] Summing all...
INFO [2022-02-10 14:32:05] Estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:32:25] Finished estimating with D.ln_quantity2 as outcome with module_by_time FE.
INFO [2022-02-10 14:32:25] Writing results...
INFO [2022-02-10 14:32:27] Summing leads...
INFO [2022-02-10 14:32:27] Summing lags...
INFO [2022-02-10 14:32:27] Summing all...
INFO [2022-02-10 14:32:33] Estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:32:52] Finished estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:32:52] Writing results...
INFO [2022-02-10 14:32:54] Summing leads...
INFO [2022-02-10 14:32:54] Summing lags...
INFO [2022-02-10 14:32:54] Summing all...
INFO [2022-02-10 14:33:00] Estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:33:18] Finished estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:33:18] Writing results...
INFO [2022-02-10 14:33:21] Summing leads...
INFO [2022-02-10 14:33:21] Summing lags...
INFO [2022-02-10 14:33:21] Summing all...
INFO [2022-02-10 14:33:25] Estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:33:43] Finished estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:33:43] Writing results...
INFO [2022-02-10 14:33:45] Summing leads...
INFO [2022-02-10 14:33:45] Summing lags...
INFO [2022-02-10 14:33:45] Summing all...
INFO [2022-02-10 14:33:50] Estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:34:09] Finished estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:34:09] Writing results...
INFO [2022-02-10 14:34:11] Summing leads...
INFO [2022-02-10 14:34:11] Summing lags...
INFO [2022-02-10 14:34:11] Summing all...
INFO [2022-02-10 14:34:15] Estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:34:34] Finished estimating with D.ln_quantity2 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:34:34] Writing results...
INFO [2022-02-10 14:34:36] Summing leads...
INFO [2022-02-10 14:34:36] Summing lags...
INFO [2022-02-10 14:34:36] Summing all...
INFO [2022-02-10 14:34:41] Estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:34:58] Finished estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:34:58] Writing results...
INFO [2022-02-10 14:35:00] Summing leads...
INFO [2022-02-10 14:35:00] Summing lags...
INFO [2022-02-10 14:35:00] Summing all...
INFO [2022-02-10 14:35:05] Estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:35:22] Finished estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:35:22] Writing results...
INFO [2022-02-10 14:35:24] Summing leads...
INFO [2022-02-10 14:35:24] Summing lags...
INFO [2022-02-10 14:35:24] Summing all...
INFO [2022-02-10 14:35:28] Estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:35:46] Finished estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:35:46] Writing results...
INFO [2022-02-10 14:35:48] Summing leads...
INFO [2022-02-10 14:35:48] Summing lags...
INFO [2022-02-10 14:35:48] Summing all...
INFO [2022-02-10 14:35:53] Estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:36:10] Finished estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:36:10] Writing results...
INFO [2022-02-10 14:36:12] Summing leads...
INFO [2022-02-10 14:36:12] Summing lags...
INFO [2022-02-10 14:36:12] Summing all...
INFO [2022-02-10 14:36:17] Estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:36:35] Finished estimating with D.ln_quantity2 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:36:35] Writing results...
INFO [2022-02-10 14:36:38] Summing leads...
INFO [2022-02-10 14:36:38] Summing lags...
INFO [2022-02-10 14:36:38] Summing all...
INFO [2022-02-10 14:36:42] Estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:36:59] Finished estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:36:59] Writing results...
INFO [2022-02-10 14:37:01] Summing leads...
INFO [2022-02-10 14:37:01] Summing lags...
INFO [2022-02-10 14:37:01] Summing all...
INFO [2022-02-10 14:37:06] Estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:37:22] Finished estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:37:22] Writing results...
INFO [2022-02-10 14:37:24] Summing leads...
INFO [2022-02-10 14:37:24] Summing lags...
INFO [2022-02-10 14:37:24] Summing all...
INFO [2022-02-10 14:37:29] Estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:37:47] Finished estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:37:47] Writing results...
INFO [2022-02-10 14:37:49] Summing leads...
INFO [2022-02-10 14:37:49] Summing lags...
INFO [2022-02-10 14:37:49] Summing all...
INFO [2022-02-10 14:37:55] Estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:38:13] Finished estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:38:13] Writing results...
INFO [2022-02-10 14:38:15] Summing leads...
INFO [2022-02-10 14:38:15] Summing lags...
INFO [2022-02-10 14:38:15] Summing all...
INFO [2022-02-10 14:38:19] Estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:38:38] Finished estimating with D.ln_quantity3 as outcome with module_by_time FE.
INFO [2022-02-10 14:38:38] Writing results...
INFO [2022-02-10 14:38:40] Summing leads...
INFO [2022-02-10 14:38:40] Summing lags...
INFO [2022-02-10 14:38:40] Summing all...
INFO [2022-02-10 14:38:45] Estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:39:01] Finished estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:39:01] Writing results...
INFO [2022-02-10 14:39:03] Summing leads...
INFO [2022-02-10 14:39:03] Summing lags...
INFO [2022-02-10 14:39:03] Summing all...
INFO [2022-02-10 14:39:08] Estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:39:25] Finished estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:39:25] Writing results...
INFO [2022-02-10 14:39:27] Summing leads...
INFO [2022-02-10 14:39:27] Summing lags...
INFO [2022-02-10 14:39:27] Summing all...
INFO [2022-02-10 14:39:32] Estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:39:49] Finished estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:39:49] Writing results...
INFO [2022-02-10 14:39:51] Summing leads...
INFO [2022-02-10 14:39:51] Summing lags...
INFO [2022-02-10 14:39:51] Summing all...
INFO [2022-02-10 14:39:57] Estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:40:14] Finished estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:40:14] Writing results...
INFO [2022-02-10 14:40:16] Summing leads...
INFO [2022-02-10 14:40:16] Summing lags...
INFO [2022-02-10 14:40:16] Summing all...
INFO [2022-02-10 14:40:20] Estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:40:39] Finished estimating with D.ln_quantity3 as outcome with region_by_module_by_time FE.
INFO [2022-02-10 14:40:39] Writing results...
INFO [2022-02-10 14:40:41] Summing leads...
INFO [2022-02-10 14:40:41] Summing lags...
INFO [2022-02-10 14:40:41] Summing all...
INFO [2022-02-10 14:40:46] Estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:41:03] Finished estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:41:03] Writing results...
INFO [2022-02-10 14:41:05] Summing leads...
INFO [2022-02-10 14:41:05] Summing lags...
INFO [2022-02-10 14:41:05] Summing all...
INFO [2022-02-10 14:41:10] Estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:41:27] Finished estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:41:27] Writing results...
INFO [2022-02-10 14:41:29] Summing leads...
INFO [2022-02-10 14:41:29] Summing lags...
INFO [2022-02-10 14:41:29] Summing all...
INFO [2022-02-10 14:41:33] Estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:41:51] Finished estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:41:51] Writing results...
INFO [2022-02-10 14:41:53] Summing leads...
INFO [2022-02-10 14:41:53] Summing lags...
INFO [2022-02-10 14:41:53] Summing all...
INFO [2022-02-10 14:41:57] Estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:42:15] Finished estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:42:15] Writing results...
INFO [2022-02-10 14:42:17] Summing leads...
INFO [2022-02-10 14:42:17] Summing lags...
INFO [2022-02-10 14:42:17] Summing all...
INFO [2022-02-10 14:42:22] Estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:42:41] Finished estimating with D.ln_quantity3 as outcome with division_by_module_by_time FE.
INFO [2022-02-10 14:42:41] Writing results...
INFO [2022-02-10 14:42:44] Summing leads...
INFO [2022-02-10 14:42:44] Summing lags...
INFO [2022-02-10 14:42:44] Summing all...
> 
> 
> proc.time()
    user   system  elapsed 
1863.538  114.424 1988.101 
